{% extends 'OroUserBundle::layout.html.twig' %}
{% block head %}
    {{ parent() }}
    {% include 'MarelloDemoBundle:Analytics:analytics-async-js.html.twig' %}
{% endblock %}
{% block bodyClass %}login-page{% endblock %}
{% block messages %}
{% endblock %}
{% block content %}
    <div id="login-page-loader"></div>
    <div class="container">
        <div class="form-wrapper">
            <div class="form-wrapper__inner">
                {% set usernameLabel = 'Username'|trans %}
                {% set passwordLabel = 'Password'|trans %}
                {% set showLabels = (usernameLabel|length <= 9) and (passwordLabel|trans <= 9) %}
                {% set layoutName = showLabels ? 'form-row-layout' : 'form-column-layout' %}
                <form id="login-form" action="{{ path('oro_user_security_check') }}" method="post" class="form-signin {{ layoutName }}">
                    <div class="form-description">
                        <header class="container__header">
                            <span class="login-logo">Marello Unified Commerce Management</span>
                        </header>
                        <div class="form-description__text">
                            <p class="login-message__text">If logging in by clicking the button below doesn't work, you can always login with the following credentials: <br/><b>username:</b> admin<br/><b>password:</b> marello123</p>
                            <p class="login-message__text notice">Please note that the application resets every hour and all data will be restored to the default state.</p>
                        </div>
                        <div id="login-user">
                            <button class="button button-login" data-login="admin" data-password="marello123"><span><span>Click here to login as Administrator</span></span></button>
                        </div>
                    </div>
                    <fieldset class="field-set">
                        {% if error %}
                            <div class="alert alert-error" role="alert">
                                <div>{{ error.messageKey|trans(error.messageData, 'security') }}</div>
                            </div>
                        {% endif %}
                        {{ messagesContent }}
                        <div class="input-field-group">
                            <div class="input-prepend">
                                <label for="prependedInput" class="add-on">{{ usernameLabel }}</label>
                                <input type="text" id="prependedInput" class="input" autocomplete="username" name="_username" value="{{ last_username }}" required="required" placeholder="{{ 'Username or Email'|trans }}" autofocus>
                            </div>
                            <div class="input-prepend input-prepend--last">
                                <label for="prependedInput2" class="add-on">{{ passwordLabel }}</label>
                                <input type="password" id="prependedInput2" class="input" autocomplete="current-password" name="_password" required="required" placeholder="{{ 'Password'|trans }}">
                            </div>
                        </div>
                        <div class="form-signin__footer form-signin__footer--login">
                            <button type="submit" class="btn extra-submit btn-uppercase btn-primary" id="_submit" name="_submit">{{ 'Log in'|trans }}</button>
                            <a href="{{ path('oro_user_reset_request') }}">{{ 'Forgot your password?'|trans }}</a>
                        </div>
                    </fieldset>
                    <input type="hidden" name="_target_path" value="">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token }}">
                </form>
            </div>
            <div class="login-copyright">{{ 'oro.auth.copy'|trans }}</div>
        </div>
        <script type="text/javascript">
            var loginForm = document.getElementById('login-form');
            loginForm.addEventListener('submit', function(event) {
                var button = event.target.querySelector('button, a');
                button.setAttribute('disabled', 'disabled');
            });
            var links = loginForm.getElementsByTagName('a');
            for (i = 0; i < links.length; i++) {
                links[i].addEventListener('click', function(e) {
                    var link = e.currentTarget;
                    if (link.getAttribute('disabled')) {
                        e.preventDefault();
                    }
                });
            }
            var button = document.getElementById('login-form').querySelector('button[data-login]');
            button.addEventListener('click', function(e) {
                var currentButton = e.currentTarget;
                document.getElementById('prependedInput').value = button.getAttribute('data-login');
                document.getElementById('prependedInput2').value = button.getAttribute('data-password');
            });
            window.addEventListener('load', function() {
                var loader = document.getElementById('login-page-loader');
                if (loader) {
                    loader.parentNode.removeChild(loader);
                }
            });
        </script>
    </div>
{% include 'MarelloDemoBundle:Analytics:analytics-js.html.twig' %}
{% endblock content %}
