parameters:
    # converter
    marello_magento.importexport.data_converter.website.class:                   Marello\Bundle\MagentoBundle\ImportExport\Converter\WebsiteDataConverter
    marello_magento.importexport.data_converter.store.class:                     Marello\Bundle\MagentoBundle\ImportExport\Converter\StoreDataConverter
    marello_magento.importexport.data_converter.product.class:                   Marello\Bundle\MagentoBundle\ImportExport\Converter\ProductDataConverter
    marello_magento.importexport.data_converter.category.class:                  Marello\Bundle\MagentoBundle\ImportExport\Converter\CategoryDataConverter
    marello_magento.importexport.data_converter.inventory_level.class:           Marello\Bundle\MagentoBundle\ImportExport\Converter\InventoryLevelDataConverter
    marello_magento.importexport.data_converter.price.class:                     Marello\Bundle\MagentoBundle\ImportExport\Converter\PriceDataConverter
    marello_magento.importexport.data_converter.order.class:                     Marello\Bundle\MagentoBundle\ImportExport\Converter\OrderDataConverter

    # connectors
    marello_magento.mage.abstract.class:                                         Marello\Bundle\MagentoBundle\Provider\Connector\AbstractMagentoConnector
    marello_magento.mage.store.class:                                            Marello\Bundle\MagentoBundle\Provider\Connector\StoreConnector
    marello_magento.mage.website.class:                                          Marello\Bundle\MagentoBundle\Provider\Connector\WebsiteConnector
    marello_magento.mage.product_connector.class:                                Marello\Bundle\MagentoBundle\Provider\Connector\ProductConnector
    marello_magento.mage.product_connector_initial.class:                        Marello\Bundle\MagentoBundle\Provider\Connector\InitialProductConnector
    marello_magento.mage.category_connector.class:                               Marello\Bundle\MagentoBundle\Provider\Connector\CategoryConnector
    marello_magento.mage.inventory_level_connector.class:                        Marello\Bundle\MagentoBundle\Provider\Connector\InventoryLevelConnector
    marello_magento.mage.price_connector.class:                                  Marello\Bundle\MagentoBundle\Provider\Connector\PriceConnector
    marello_magento.mage.rest.store.class:                                       Marello\Bundle\MagentoBundle\Provider\Connector\Rest\StoreConnector
    marello_magento.mage.rest.website.class:                                     Marello\Bundle\MagentoBundle\Provider\Connector\Rest\WebsiteConnector
    marello_magento.mage.order_connector.class:                                  Marello\Bundle\MagentoBundle\Provider\Connector\OrderConnector

    # normalizers
    marello_magento.importexport.normalizer.datetime.class:                      Marello\Bundle\MagentoBundle\ImportExport\Serializer\Normalizer\DateTimeNormalizer
    marello_magento.importexport.serializer.product_normalizer.class:            Marello\Bundle\MagentoBundle\ImportExport\Serializer\ProductNormalizer
    marello_magento.importexport.serializer.price_normalizer.class:              Marello\Bundle\MagentoBundle\ImportExport\Serializer\PriceNormalizer

    # strategies
    marello_magento.import.strategy.abstract.class:                              Marello\Bundle\MagentoBundle\ImportExport\Strategy\AbstractImportStrategy
    marello_magento.import_strategy.default_magento_import.class:                Marello\Bundle\MagentoBundle\ImportExport\Strategy\DefaultMagentoImportStrategy
    marello_magento.import.strategy.product.class:                               Marello\Bundle\MagentoBundle\ImportExport\Strategy\ProductMagentoImportStrategy
    marello_magento.import.strategy.category.class:                              Marello\Bundle\MagentoBundle\ImportExport\Strategy\CategoryMagentoImportStrategy
    marello_magento.import.strategy.order.class:                                 Marello\Bundle\MagentoBundle\ImportExport\Strategy\OrderImportStrategy

    # processors
    marello_magento.provider.initial_processor.class:                            Marello\Bundle\MagentoBundle\Provider\AbstractInitialProcessor
    marello_magento.provider.initial_sync_processor.class:                       Marello\Bundle\MagentoBundle\Provider\InitialSyncProcessor
    marello_magento.provider.initial_schedule_processor.class:                   Marello\Bundle\MagentoBundle\Provider\InitialScheduleProcessor

    # writers
    marello_magento.writer.proxy_entity_writer.class:                            Marello\Bundle\MagentoBundle\ImportExport\Writer\ProxyEntityWriter
    marello_magento.importexport.writer.abstract_export.class:                   Marello\Bundle\MagentoBundle\ImportExport\Writer\AbstractExportWriter
    marello_magento.importexport.writer.product_export.class:                    Marello\Bundle\MagentoBundle\ImportExport\Writer\ProductExportWriter
    marello_magento.importexport.writer.product_export_delete.class:             Marello\Bundle\MagentoBundle\ImportExport\Writer\ProductExportDeleteWriter
    marello_magento.importexport.writer.product_category_export.class:           Marello\Bundle\MagentoBundle\ImportExport\Writer\ProductCategoryExportWriter
    marello_magento.importexport.writer.inventory_level_export.class:            Marello\Bundle\MagentoBundle\ImportExport\Writer\InventoryLevelExportWriter
    marello_magento.importexport.writer.price_export.class:                      Marello\Bundle\MagentoBundle\ImportExport\Writer\PriceExportWriter

    # Readers
    marello_magento.reader.context.class:                                        Marello\Bundle\MagentoBundle\Provider\Reader\ContextReader
    marello_magento.importexport.reader.entity.class:                            Marello\Bundle\MagentoBundle\Provider\Reader\ContextOptionReader
    marello_magento.importexport.reader.product_export.class:                    Marello\Bundle\MagentoBundle\Provider\Reader\ProductExportReader
    marello_magento.importexport.reader.product_export_delete.class:             Marello\Bundle\MagentoBundle\Provider\Reader\ProductExportDeleteReader
    marello_magento.importexport.reader.product_category_export.class:           Marello\Bundle\MagentoBundle\Provider\Reader\ProductCategoryExportReader
    marello_magento.importexport.reader.inventory_level_export.class:            Marello\Bundle\MagentoBundle\Provider\Reader\InventoryLevelExportReader
    marello_magento.importexport.reader.price_export.class:                      Marello\Bundle\MagentoBundle\Provider\Reader\PriceExportReader

    # ImportExport Processor
    marello_magento.importexport.processor.context.class:                        Marello\Bundle\MagentoBundle\ImportExport\Processor\ContextProcessor

    marello_magento.provider.strategy.two_way_sync.class:                        Marello\Bundle\MagentoBundle\Provider\Strategy\TwoWaySyncStrategy

services:
    # Data converter
    marello_magento.importexport.data_converter.website:
        class: '%marello_magento.importexport.data_converter.website.class%'

    marello_magento.importexport.data_converter.store:
        class: '%marello_magento.importexport.data_converter.store.class%'

    marello_magento.importexport.data_converter.rest.store:
        class: Marello\Bundle\MagentoBundle\ImportExport\Converter\Rest\StoreDataConverter

    marello_magento.importexport.data_converter.product:
        class: '%marello_magento.importexport.data_converter.product.class%'
        arguments:
            - '@doctrine.orm.entity_manager'

    marello_magento.importexport.data_converter.category:
        class: '%marello_magento.importexport.data_converter.category.class%'
        arguments:
            - '@doctrine.orm.entity_manager'

    marello_magento.importexport.data_converter.inventory_level:
        class: '%marello_magento.importexport.data_converter.inventory_level.class%'
        arguments:
            - '@doctrine.orm.entity_manager'

    marello_magento.importexport.data_converter.price:
        class: '%marello_magento.importexport.data_converter.price.class%'
        arguments:
            - '@doctrine.orm.entity_manager'

    marello_magento.importexport.data_converter.order:
        class: '%marello_magento.importexport.data_converter.order.class%'
        arguments:
            - '@doctrine.orm.entity_manager'

    # Connectors
    marello_magento.connector.abstract:
        class: '%marello_magento.mage.abstract.class%'
        abstract: true
        arguments:
            - "@oro_importexport.context_registry"
            - "@oro_integration.logger.strategy"
            - "@oro_integration.provider.connector_context_mediator"
            - []
        calls:
            - [setManagerRegistry, ["@doctrine"]]

    marello_magento.mage.website:
        class: '%marello_magento.mage.website.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, [%marello_magento.entity.website.class%]]
        tags:
            - { name: oro_integration.connector, type: website_dictionary, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.rest.website:
        class: '%marello_magento.mage.rest.website.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, [%marello_magento.entity.website.class%]]
        tags:
            - { name: oro_integration.connector, type: website_dictionary, channel_type: magento2 }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.store:
        class: '%marello_magento.mage.store.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, [%marello_magento.entity.store.class%]]
        tags:
            - { name: oro_integration.connector, type: store_dictionary, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.rest.store:
        class: '%marello_magento.mage.rest.store.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, [%marello_magento.entity.store.class%]]
        tags:
            - { name: oro_integration.connector, type: store_dictionary, channel_type: magento2 }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.product_connector:
        class: '%marello_magento.mage.product_connector.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, ['%marello_magento.entity.product.class%']]
        tags:
            - { name: oro_integration.connector, type: product, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.product_connector_initial:
        class: '%marello_magento.mage.product_connector_initial.class%'
        parent: marello_magento.connector.abstract
        calls:
            - [setClassName, ['%marello_magento.entity.product.class%']]
        tags:
            - { name: oro_integration.connector, type: product_initial, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.order_connector:
        class: '%marello_magento.mage.order_connector.class%'
        parent: marello_magento.connector.abstract
        tags:
            - { name: oro_integration.connector, type: order, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.category_connector:
        class: '%marello_magento.mage.category_connector.class%'
        parent: marello_magento.connector.abstract
        tags:
            - { name: oro_integration.connector, type: category, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.inventory_level_connector:
        class: "%marello_magento.mage.inventory_level_connector.class%"
        parent: marello_magento.connector.abstract
        tags:
            - { name: oro_integration.connector, type: inventory_level, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    marello_magento.mage.price_connector:
        class: "%marello_magento.mage.price_connector.class%"
        parent: marello_magento.connector.abstract
        tags:
            - { name: oro_integration.connector, type: price, channel_type: magento }
            - { name: marello_magento.bundle_config.aware, argument_number: 3 }

    # Normalizers / Denormalizers
    marello_magento.importexport.denormalizer.default_configurable_entity:
        class: Marello\Bundle\MagentoBundle\ImportExport\Serializer\DefaultConfigurableEntityDenormalizer
        arguments:
            - "@oro_entity.helper.field_helper"
            - "@logger"
        tags:
            - { name: oro_importexport.normalizer, priority: -200 }

    # Strategies
    marello_magento.import_strategy.default_magento_import:
        class: %marello_magento.import_strategy.default_magento_import.class%
        parent: oro_importexport.strategy.configurable_add_or_replace
        calls:
            - [setPropertyAccessor, ["@property_accessor"]]

    marello_magento.import.strategy.abstract:
        class: '%marello_magento.import.strategy.abstract.class%'
        parent: marello_magento.import_strategy.default_magento_import
        absract: true
        calls:
            - [setLogger, ["@oro_integration.logger.strategy"]]
            - [setOwnerHelper, ["@oro_integration.helper.default_owner_helper"]]

    marello_magento.import.strategy.store:
        parent: marello_magento.import_strategy.default_magento_import

    marello_magento.import.strategy.website:
        parent: marello_magento.import_strategy.default_magento_import

    marello_magento.import.strategy.order:
        class: '%marello_magento.import.strategy.order.class%'
        parent: marello_magento.import_strategy.default_magento_import

    marello_magento.import.strategy.product:
        class: '%marello_magento.import.strategy.product.class%'
        parent: marello_magento.import_strategy.default_magento_import

    marello_magento.import.strategy.category:
        class: '%marello_magento.import.strategy.category.class%'
        parent: marello_magento.import_strategy.default_magento_import

    # Processors
    marello_magento.importexport.normalizer.datetime:
        class: '%marello_magento.importexport.normalizer.datetime.class%'
        tags:
            - { name: oro_importexport.normalizer }

    marello_magento.provider.sync.processor:
        class: Marello\Bundle\MagentoBundle\Provider\MagentoSyncProcessor
        parent: oro_integration.sync.processor
        abstract: true
        tags:
            - { name: marello_magento.bundle_config.aware }
        calls:
            - [setChannelClassName, [%oro_integration.entity.class%]]

    marello_magento.provider.initial_processor:
        class: '%marello_magento.provider.initial_processor.class%'
        parent: marello_magento.provider.sync.processor
        abstract: true

    marello_magento.provider.initial_sync_processor:
        class: %marello_magento.provider.initial_sync_processor.class%
        parent: marello_magento.provider.initial_processor
        tags:
            - { name: marello_magento.bundle_config.aware }

    marello_magento.provider.initial_schedule_processor:
        class: %marello_magento.provider.initial_schedule_processor.class%
        parent: marello_magento.provider.initial_processor
        calls:
            - [setDoctrineHelper, ["@oro_entity.doctrine_helper"]]
            - [setMessageProducer, ["@oro_message_queue.message_producer"]]
        tags:
            - { name: oro_integration.sync_processor, integration: magento }
            - { name: oro_integration.sync_processor, integration: magento2 }

    marello_magento.importexport.processor.context:
        class: '%marello_magento.importexport.processor.context.class%'
        parent: 'oro_integration.importexport.processor.import'

    marello_magento.importexport.processor.store:
        parent: 'oro_integration.importexport.processor.import'
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.store"]]
            - [setStrategy, ["@marello_magento.import.strategy.store"]]
            - [setEntityName, ['%marello_magento.entity.store.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magento.entity.store.class%'
              alias: marello_magento.store

    marello_magento.importexport.processor.rest.store:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.rest.store"]]
            - [setStrategy, ["@marello_magento.import.strategy.store"]]
            - [setEntityName, ['%marello_magento.entity.store.class%']]

    marello_magento.importexport.processor.website:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.website"]]
            - [setStrategy, ["@marello_magento.import.strategy.website"]]
            - [setEntityName, ['%marello_magento.entity.website.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magento.entity.website.class%'
              alias: marello_magento.website

    marello_magento.importexport.processor.order:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.order"]]
            - [setStrategy, ["@marello_magento.import.strategy.order"]]
            - [setEntityName, ['%marello_magento.entity.order.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magento.entity.order.class%'
              alias: marello_magento.order

    marello_magento.importexport.processor.inventory_level:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setEntityName, ['%marello_inventory.virtual_inventory.entity.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_inventory.virtual_inventory.entity.class%'
              alias: marello_magento.inventory_level

    marello_magento.importexport.processor.price:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setEntityName, ['%marello_pricing.price.entity.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_pricing.price.entity.class%'
              alias: marello_magento.price

    marello_magento.importexport.processor.rest.website:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.website"]]
            - [setStrategy, ["@marello_magento.import.strategy.website"]]
            - [setEntityName, ['%marello_magento.entity.website.class%']]

    marello_magento.importexport.processor.product:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.product"]]
            - [setStrategy, ['@marello_magento.import.strategy.product']]
            - [setEntityName, ['%marello_magento.entity.product.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magento.entity.product.class%'
              alias: marello_magento.product

    marello_magento.importexport.processor.category:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.category"]]
            - [setStrategy, ['@marello_magento.import.strategy.category']]
            - [setEntityName, ['%marello_magento.entity.category.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magento.entity.category.class%'
              alias: marello_magento.category

    # Export processor
    marello_magento.importexport.processor.product_export:
        parent: oro_integration.importexport.processor.export
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.product"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%marello_product.entity.class%'
              alias: marello_magento.product_export

    marello_magento.importexport.processor.product_export_delete:
        parent: oro_integration.importexport.processor.export
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.product"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%marello_magento.entity.product.class%'
              alias: marello_magento.product_export_delete

    marello_magento.importexport.processor.inventory_level_export:
        parent: oro_integration.importexport.processor.export
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.inventory_level"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%marello_inventory.virtual_inventory.entity.class%'
              alias: marello_magento.inventory_level_export

    marello_magento.importexport.processor.price_export:
        parent: oro_integration.importexport.processor.export
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.price"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%marello_pricing.price.entity.class%'
              alias: marello_magento.price_export

    marello_magento.importexport.processor.product_category_export:
        parent: oro_integration.importexport.processor.export
        calls:
            - [setDataConverter, ["@marello_magento.importexport.data_converter.category"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%marello_catalog.entity.category.class%'
              alias: marello_magento.product_category_export

    # Writers
    marello_magento.writer.proxy_entity_writer:
        class: '%marello_magento.writer.proxy_entity_writer.class%'
        arguments:
            - "@oro_integration.writer.persistent_batch_writer"
            - "@oro_importexport.field.database_helper"
        calls:
            - [setLogger, ["@oro_integration.logger.strategy"]]

    marello_magento.importexport.writer.abstract_export:
        class: '%marello_magento.importexport.writer.abstract_export.class%'
        parent: oro_integration.writer.persistent_batch_writer
        abstract: true
        calls:
            - [setTransport, ["@marello_magento.transport.soap_transport"]]
            - [setChannelClassName, ['%oro_integration.entity.class%']]

    marello_magento.importexport.writer.product_export:
        class: %marello_magento.importexport.writer.product_export.class%
        parent: marello_magento.importexport.writer.abstract_export

    marello_magento.importexport.writer.product_export_delete:
        class: '%marello_magento.importexport.writer.product_export_delete.class%'
        parent: marello_magento.importexport.writer.abstract_export

    marello_magento.importexport.writer.inventory_level_export:
        class: '%marello_magento.importexport.writer.inventory_level_export.class%'
        parent: marello_magento.importexport.writer.abstract_export

    marello_magento.importexport.writer.product_category_export:
        class: '%marello_magento.importexport.writer.product_category_export.class%'
        parent: marello_magento.importexport.writer.abstract_export

    marello_magento.importexport.writer.price_export:
        class: '%marello_magento.importexport.writer.price_export.class%'
        parent: marello_magento.importexport.writer.abstract_export

    # readers
    marello_magento.importexport.reader.entity:
        class: '%marello_magento.importexport.reader.entity.class%'
        parent: marello_magento.reader.context
        calls:
            - [setContextKey, ['entity']]

    marello_magento.reader.context:
        class: '%marello_magento.reader.context.class%'
        abstract: true
        arguments:
            - "@oro_importexport.context_registry"

    marello_magento.importexport.reader.product_export:
        class: '%marello_magento.importexport.reader.product_export.class%'
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setEntityName, ['%marello_product.entity.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento.importexport.reader.product_export_delete:
        class: '%marello_magento.importexport.reader.product_export_delete.class%'
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setEntityName, ['%marello_magento.entity.product.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento.importexport.reader.product_category_export:
        class: '%marello_magento.importexport.reader.product_category_export.class%'
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setSourceEntityName, ['%marello_catalog.entity.category.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento.importexport.reader.inventory_level_export:
        class: '%marello_magento.importexport.reader.inventory_level_export.class%'
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setEntityName, ['%marello_inventory.virtual_inventory.entity.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento.importexport.reader.price_export:
        class: '%marello_magento.importexport.reader.price_export.class%'
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setEntityName, ['%marello_pricing.price.entity.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    #Export Normalizer
    marello_magento.importexport.serializer.product_normalizer:
        class: '%marello_magento.importexport.serializer.product_normalizer.class%'
        parent: oro_importexport.serializer.configurable_entity_normalizer
        calls:
            - [setEntityClass, ['%marello_product.entity.class%']]
        tags:
            - { name: oro_importexport.normalizer }

    marello_magento.importexport.serializer.price_normalizer:
        class: '%marello_magento.importexport.serializer.price_normalizer.class%'
        parent: oro_importexport.serializer.configurable_entity_normalizer
        calls:
            - [setEntityClass, ['%marello_pricing.price.entity.class%']]
        tags:
            - { name: oro_importexport.normalizer }

    # strategy
    marello_magento.provider.strategy.two_way_sync.product:
        class: '%marello_magento.provider.strategy.two_way_sync.class%'
        arguments:
            - "@marello_magento.importexport.processor.product"
            - "@marello_magento.importexport.processor.product_export"
            - "@oro_entity.doctrine_helper"

    # utils
    marello_magento.post_job_executor:
        class: 'Marello\Bundle\MagentoBundle\ImportExport\Job\PostJobExecutor'
        parent: oro_importexport.job_executor
