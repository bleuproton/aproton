{% block marello_replenishment_order_item_widget %}
    <td>
        <div class="fields-row">
            {{ form_widget(form.productSku) }}
        </div>
        {{ form_errors(form.productSku) }}
    </td>
    <td>
        <div class="fields-row">
            {{ form_widget(form.productName) }}
        </div>
        {{ form_errors(form.productName) }}
    </td>
    <td>
        <div class="fields-row">
            {{ form_widget(form.inventoryQty) }}
        </div>
        {{ form_errors(form.inventoryQty) }}
    </td>
    <td>
        <div class="fields-row">
            {{ form_widget(form.note) }}
        </div>
        {{ form_errors(form.note) }}
    </td>
{% endblock %}

{% macro marello_replenishment_order_item_prototype(widget) %}
    {% if 'collection' in widget.vars.block_prefixes %}
        {% set form = widget.vars.prototype %}
        {% set name = widget.vars.full_name ~ '[' ~ widget.vars.prototype.vars.name ~ ']' %}
        {% set disabled = widget.vars.disabled %}
        {% set allow_delete = widget.vars.allow_delete %}
    {% else %}
        {% if widget.vars.disallow_delete is defined and widget.vars.disallow_delete %}
            {% set allow_delete = false %}
        {% else %}
            {% set allow_delete = widget.parent.vars.allow_delete %}
        {% endif %}
        {% set form = widget %}
        {% set name = widget.vars.full_name %}
        {% set disabled = widget.parent.vars.disabled %}
    {% endif %}

    {% set page_component_options = { 'disabled': not allow_delete } %}

    <tr class="marello-line-item">
        {{ form_widget(form) }}
    </tr>
{% endmacro %}

{% block marello_replenishment_order_item_collection_widget %}
    {% import _self as fields %}

    {% spaceless %}
        {% if prototype is defined %}
            {% set prototype_html = fields.marello_replenishment_order_item_prototype(form) %}
        {% endif %}
        {% set attr = attr|merge({'class': (attr.class is defined ? attr.class ~ ' ' : '') ~ 'marello-item-collection grid-container' }) %}
        {% set id = id ~ '_collection' %}
        <div class="row-oro">
            {% set prototype_name = form.vars.prototype_name %}
            <div {{ block('widget_container_attributes') }}>
                <table class="grid table-hover table table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th class="replenishmentorderitem-line-item-product-sku"><span>{{ 'marelloenterprise.replenishment.replenishmentorderitem.product_sku.label'|trans }}</span></th>
                            <th class="replenishmentorderitem-line-item-product-name"><span>{{ 'marelloenterprise.replenishment.replenishmentorderitem.product_name.label'|trans }}</span></th>
                            <th class="replenishmentorderitem-line-item-inventory-qty"><span>{{ 'marelloenterprise.replenishment.replenishmentorderitem.inventory_qty.label'|trans }}</span></th>
                            <th class="replenishmentorderitem-line-item-note"><span>{{ 'marelloenterprise.replenishment.replenishmentorderitem.note.label'|trans }}</span></th>
                        </tr>
                    </thead>
                    <tbody data-last-index="{{ form.children|length}}" data-prototype-name="{{ prototype_name }}"{% if prototype_html is defined %} data-prototype="{{ prototype_html|escape }}"{% endif %}>
                    {% if form.children|length %}
                        {% for child in form.children %}
                            {{ _self.marello_replenishment_order_item_prototype(child) }}
                        {% endfor %}
                    {% elseif show_form_when_empty and prototype_html is defined %}
                        {{ prototype_html|replace({(prototype_name): '0'})|raw }}
                    {% endif %}
                    </tbody>
                </table>
            </div>
        </div>
    {% endspaceless %}
{% endblock %}

{% block marello_replenishment_order_config_products_widget %}
    {{ form_widget(form) }}

    <div id="{{ id }}-container"></div>

    <script type="text/javascript">
        require([
                    'jquery',
                    'marelloenterprisereplenishment/js/multiple-entity',
                    'marelloenterprisereplenishment/js/multiple-entity/collection',
                    'marelloenterprisereplenishment/js/multiple-entity/model',
                    'text!{{ asset('bundles/marelloenterprisereplenishment/js/multiple-entity/templates/multiple-entities.html') }}',
                    'text!{{ asset('bundles/marelloenterprisereplenishment/js/multiple-entity/templates/multiple-entity.html') }}'
                ],
                function($, MultipleEntity, MultipleEntityCollection, MultipleEntityModel, EntitiesTpl, EntityTpl) {
                    {% set selectionUrl = null %}
                    {% set originalFieldId = attr['data-ftid'] %}
                    {% if form.vars.grid_url is defined and form.vars.grid_url %}
                    {% set selectionUrl = form.vars.grid_url %}
                    {% elseif form.vars.selection_url is defined and form.vars.selection_url %}
                    {% set selectionUrl = form.vars.selection_url %}
                    {% endif %}
                    {% set selectionRouteName = form.vars.selection_route|default(null) %}
                    {% set selectionRouteParameters = form.vars.selection_route_parameters|default({}) %}

                    var widget = new MultipleEntity({
                        el: '#{{ id }}-container',
                        template: EntitiesTpl,
                        elementTemplate: EntityTpl,
                        addedElement: 'input[data-ftid="{{ originalFieldId }}_added"]',
                        removedElement: 'input[data-ftid="{{ originalFieldId }}_removed"]',
                        name: {{ id|json_encode|raw }},
                        defaultElement: {{ form.vars.default_element|json_encode|raw }},
                        selectionUrl: {{ selectionUrl|json_encode|raw }},
                        selectionRouteName: {{ selectionRouteName|json_encode|raw }},
                        selectionRouteParams: {{ selectionRouteParameters|json_encode(constant('JSON_FORCE_OBJECT'))|raw }},
                        allowAction: {{ form.vars.allow_action|json_encode|raw }},
                        collection: new MultipleEntityCollection(),
                        selectorWindowTitle: {{ form.vars.selector_window_title|trans|json_encode|raw }}
                    });

                    {% if form.vars.extra_config is defined and form.vars.extra_config %}
                    {{ block('oro_multiple_entity_js_' ~ form.vars.extra_config) }}
                    {% endif %}
                });
    </script>
{% endblock %}
