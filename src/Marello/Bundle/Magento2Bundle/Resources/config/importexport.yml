services:
    # Strategies
    marello_magento2.import_strategy.default_magento2_import:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Strategy\DefaultMagento2ImportStrategy
        parent: oro_importexport.strategy.configurable_add_or_replace
        calls:
            - ['setLogger', ['@oro_integration.logger.strategy']]
            - ['setPropertyAccessor', ['@property_accessor']]

    marello_magento2.import_strategy.website:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Strategy\WebsiteMagento2ImportStrategy
        parent: marello_magento2.import_strategy.default_magento2_import
        calls:
            - ['setEnableCollectingOriginIds', [true]]

    marello_magento2.import_strategy.store:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Strategy\StoreMagento2ImportStrategy
        parent: marello_magento2.import_strategy.default_magento2_import
        calls:
            - ['setEnableCollectingOriginIds', [true]]

    marello_magento2.import_strategy.product_tax_class:
        parent: marello_magento2.import_strategy.default_magento2_import
        calls:
            - ['setEnableCollectingOriginIds', [true]]

    marello_magento2.import_strategy.attributeset:
        parent: marello_magento2.import_strategy.default_magento2_import
        calls:
            - ['setEnableCollectingOriginIds', [true]]

    marello_magento2.import_strategy.order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Strategy\OrderMagento2ImportStrategy
        parent: marello_magento2.import_strategy.default_magento2_import

    # Provider
    marello_magento2.integration.provider.last_sync:
        class: Marello\Bundle\Magento2Bundle\Integration\Provider\LastSyncProvider

    # Connectors
    marello_magento2.integration.connector.abstract:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\AbstractConnector
        abstract: true
        arguments:
            - '@oro_importexport.context_registry'
            - '@oro_integration.logger.strategy'
            - '@oro_integration.provider.connector_context_mediator'

    marello_magento2.integration.connector.abstract_initial_import:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\AbstractInitialImportConnector
        parent: marello_magento2.integration.connector.abstract
        abstract: true
        calls:
            - ['setSearchParametersConverter', ['@marello_magento2.converter.initial_search_parameters']]

    marello_magento2.integration.connector.abstract_import:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\AbstractImportConnector
        parent: marello_magento2.integration.connector.abstract
        abstract: true
        calls:
            - ['setSearchParametersConverter', ['@marello_magento2.converter.general_search_parameters']]
            - ['setLastSyncProvider', ['@marello_magento2.integration.provider.last_sync']]

    marello_magento2.integration.connector.product:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\ProductConnector
        parent: marello_magento2.integration.connector.abstract
        tags:
            - { name: oro_integration.connector, type: product, channel_type: magento2 }

    marello_magento2.integration.connector.website:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\WebsiteConnector
        parent: marello_magento2.integration.connector.abstract
        tags:
            - { name: oro_integration.connector, type: website_dictionary, channel_type: magento2 }

    marello_magento2.integration.connector.store:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\StoreConnector
        parent: marello_magento2.integration.connector.abstract
        tags:
            - { name: oro_integration.connector, type: store_dictionary, channel_type: magento2 }

    marello_magento2.integration.connector.product_tax_class:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\ProductTaxClassConnector
        parent: marello_magento2.integration.connector.abstract
        tags:
            - { name: oro_integration.connector, type: product_tax_class_dictionary, channel_type: magento2 }

    marello_magento2.integration.connector.attributeset:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\AttributeSetConnector
        parent: marello_magento2.integration.connector.abstract
        tags:
            - { name: oro_integration.connector, type: magento2_attributeset_dictionary, channel_type: magento2 }

    marello_magento2.integration.connector.order:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\OrderConnector
        parent: marello_magento2.integration.connector.abstract_import
        tags:
            - { name: oro_integration.connector, type: order, channel_type: magento2 }

    marello_magento2.integration.connector.initial_order:
        class: Marello\Bundle\Magento2Bundle\Integration\Connector\InitialOrderConnector
        parent: marello_magento2.integration.connector.abstract_initial_import
        tags:
            - { name: oro_integration.connector, type: order_initial, channel_type: magento2 }

    # Readers
    marello_magento2.importexport.reader.export.product_delete_removed_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Reader\ProductExportDeleteRemovedReader
        arguments:
            - '@oro_importexport.context_registry'

    marello_magento2.importexport.reader.find_internal_magento_product:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Reader\InternalMagentoProductReader
        arguments:
            - '@oro_importexport.context_registry'
            - '@marello_magento2.repository.product'
            - '@oro_integration.provider.connector_context_mediator'

    marello_magento2.importexport.reader.find_internal_magento_order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Reader\InternalMagentoOrderReader
        arguments:
            - '@oro_importexport.context_registry'
            - '@marello_magento2.repository.order'
            - '@oro_integration.provider.connector_context_mediator'

    marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_product:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Reader\EntityReaderFilterableByInternalMagentoProduct
        abstract: true
        parent: oro_importexport.reader.entity
        calls:
            - ['setLogger', ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.reader.export.product.create_action:
        parent: marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_product
        calls:
            - ['setActionName', [!php/const Marello\Bundle\Magento2Bundle\Integration\Connector\ProductConnector::EXPORT_ACTION_CREATE]]
            - ['setSkipWithInternalProduct', [true]]

    marello_magento2.importexport.reader.export.product.update_action:
        parent: marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_product
        calls:
            - ['setActionName', [!php/const Marello\Bundle\Magento2Bundle\Integration\Connector\ProductConnector::EXPORT_ACTION_UPDATE]]
            - ['setSkipWithInternalProduct', [false]]

    marello_magento2.importexport.reader.export.product.update_website_scope_data_action:
        parent: marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_product
        calls:
            - ['setActionName', [!php/const Marello\Bundle\Magento2Bundle\Integration\Connector\ProductConnector::EXPORT_ACTION_UPDATE_WEBSITE_SCOPE_DATA]]
            - ['setSkipWithInternalProduct', [false]]

    marello_magento2.importexport.reader.export.product.delete_on_channel_action:
        parent: marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_product
        calls:
            - ['setActionName', [!php/const Marello\Bundle\Magento2Bundle\Integration\Connector\ProductConnector::EXPORT_ACTION_DELETE_ON_CHANNEL]]
            - ['setSkipWithInternalProduct', [false]]

    marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Reader\EntityReaderFilterableByInternalMagentoOrder
        abstract: true
        parent: oro_importexport.reader.entity
        calls:
            - ['setLogger', ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.reader.export.order.update_status_action:
        parent: marello_magento2.importexport.reader.entity.entity_reader_filterable_by_internal_magento_order
        calls:
            - ['setActionName', [!php/const Marello\Bundle\Magento2Bundle\Integration\Connector\OrderConnector::EXPORT_ACTION_UPDATE_ORDER_STATUS]]

    marello_magento2.importexport.reader.origin_ids_context:
        class:  Marello\Bundle\Magento2Bundle\ImportExport\Reader\OriginIdsContextReader
        arguments:
            - '@oro_importexport.context_registry'
        calls:
            - ['setLogger', ['@oro_integration.logger.strategy']]

    # Writers
    marello_magento2.importexport.writer.export.abstract:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\AbstractExportWriter
        abstract: true
        parent: oro_integration.writer.persistent_batch_writer
        calls:
            - [setTransport, ["@marello_magento2.transport.rest_transport"]]
            - [setChannelClassName, ['Oro\Bundle\IntegrationBundle\Entity\Channel']]

    marello_magento2.importexport.writer.export.product_delete_removed_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\ProductExportDeleteRemovedWriter
        parent: marello_magento2.importexport.writer.export.abstract

    marello_magento2.importexport.writer.export.product.delete_on_channel_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\ProductExportDeleteOnChannelWriter
        parent: marello_magento2.importexport.writer.export.abstract

    marello_magento2.importexport.writer.find_internal_magento_product:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\InternalMagentoProductWriter

    marello_magento2.importexport.writer.find_internal_magento_order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\InternalMagentoOrderWriter

    marello_magento2.importexport.writer.export.product.create_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\ProductExportCreateWriter
        parent: marello_magento2.importexport.writer.export.abstract
        calls:
            - ['setProductScheduler', ['@marello_magento2.scheduler.product']]

    marello_magento2.importexport.writer.export.product.update_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\ProductExportUpdateWriter
        parent: marello_magento2.importexport.writer.export.abstract

    marello_magento2.importexport.writer.export.product.update_website_scope_data_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\ProductExportUpdateWebsiteScopeDataWriter
        parent: marello_magento2.importexport.writer.export.abstract

    marello_magento2.importexport.writer.export.order.update_status_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Writer\OrderExportUpdateStatusWriter
        parent: marello_magento2.importexport.writer.export.abstract

    # Remover
    marello_magento2.importexport.remover.non_existed_records:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Remover\NonExistedRecordsRemover
        arguments:
            - '@doctrine'
            - '@oro_importexport.context_registry'
        calls:
            - ['setLogger', ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.remover.website_mapping_records:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Remover\WebsiteMappingRecordsRemover
        parent: marello_magento2.importexport.remover.non_existed_records

    # Data converters
    marello_magento2.importexport.converter.website:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\WebsiteDataConverter

    marello_magento2.importexport.converter.store:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\StoreDataConverter

    marello_magento2.importexport.converter.product_tax_class:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\ProductTaxClassDataConverter

    marello_magento2.importexport.converter.product.delete_on_channel_action:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\ProductDeleteOnChannelDataConverter

    marello_magento2.importexport.converter.attributeset:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\AttributeSetDataConverter

    marello_magento2.importexport.converter.magento_order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\MagentoOrderDataConverter
        arguments:
            - '@marello_magento2.converter.order_status_id'
        calls:
            - [addNodeDataConverter, ['marello_order_data_alias', '@marello_magento2.importexport.converter.marello_order']]
            - [addNodeDataConverter, ['customer_data_alias', '@marello_magento2.importexport.converter.customer']]

    marello_magento2.importexport.converter.marello_order:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\MarelloOrderDataConverter
        calls:
            - [addNodeDataConverter, ['shippingAddress', '@marello_magento2.importexport.converter.marello_order_address']]
            - [addNodeDataConverter, ['billingAddress', '@marello_magento2.importexport.converter.marello_order_address']]
            - [addNodeDataConverter, ['items', '@marello_magento2.importexport.converter.marello_order_item', true]]

    marello_magento2.importexport.converter.marello_order_address:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\MarelloOrderAddressDataConverter
        arguments:
            - '@marello_magento2.provider.country_iso2_code'

    marello_magento2.importexport.converter.customer:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\CustomerDataConverter
        arguments:
            - '@marello_magento2.generator.customer_hash_id'

    marello_magento2.importexport.converter.marello_order_item:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Converter\MarelloOrderItemDataConverter

    # Processors
    marello_magento2.importexport.processor.website:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ['@marello_magento2.importexport.converter.website']]
            - [setStrategy, ['@marello_magento2.import_strategy.website']]
            - [setEntityName, ['Marello\Bundle\Magento2Bundle\Entity\Website']]
        tags:
            - { name: oro_importexport.processor, type: import, entity: 'Marello\Bundle\Magento2Bundle\Entity\Website', alias: marello_magento2.website }

    marello_magento2.importexport.processor.store:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ['@marello_magento2.importexport.converter.store']]
            - [setStrategy, ['@marello_magento2.import_strategy.store']]
            - [setEntityName, ['Marello\Bundle\Magento2Bundle\Entity\Store']]
        tags:
            - { name: oro_importexport.processor, type: import, entity: 'Marello\Bundle\Magento2Bundle\Entity\Store', alias: marello_magento2.store }

    marello_magento2.importexport.processor.product_tax_class:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ['@marello_magento2.importexport.converter.product_tax_class']]
            - [setStrategy, ['@marello_magento2.import_strategy.product_tax_class']]
            - [setEntityName, ['Marello\Bundle\Magento2Bundle\Entity\ProductTaxClass']]
        tags:
            - { name: oro_importexport.processor, type: import, entity: 'Marello\Bundle\Magento2Bundle\Entity\ProductTaxClass', alias: marello_magento2.product_tax_class }

    marello_magento2.importexport.processor.attributeset:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ['@marello_magento2.importexport.converter.attributeset']]
            - [setStrategy, ['@marello_magento2.import_strategy.attributeset']]
            - [setEntityName, ['Marello\Bundle\Magento2Bundle\Entity\AttributeSet']]
        tags:
            - { name: oro_importexport.processor, type: import, entity: 'Marello\Bundle\Magento2Bundle\Entity\AttributeSet', alias: marello_magento2.attributeset }

    marello_magento2.importexport.processor.order:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ['@marello_magento2.importexport.converter.magento_order']]
            - [setStrategy, ['@marello_magento2.import_strategy.order']]
            - [setEntityName, ['Marello\Bundle\Magento2Bundle\Entity\Order']]
        tags:
            - { name: oro_importexport.processor, type: import, entity: 'Marello\Bundle\Magento2Bundle\Entity\Order', alias: marello_magento2.order }


    marello_magento2.importexport.processor.export_abstract:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Processor\ExportProcessor
        abstract: true
        calls:
            - [setSerializer, ['@oro_importexport.serializer']]
            - [setContextRegistry, ['@oro_importexport.context_registry']]

    marello_magento2.importexport.processor.export.product.create_action:
        parent: marello_magento2.importexport.processor.export_abstract
        calls:
            - [setTranslator, ['@marello_magento2.importexport.translator.simple_product.create']]

    marello_magento2.importexport.processor.export.product.update_action:
        parent: marello_magento2.importexport.processor.export_abstract
        calls:
            - [setTranslator, ['@marello_magento2.importexport.translator.simple_product.update']]

    marello_magento2.importexport.processor.export.product.update_website_scope_data_action:
        parent: marello_magento2.importexport.processor.export_abstract
        calls:
            - [setTranslator, ['@marello_magento2.importexport.translator.simple_product.update_website_scope']]

    marello_magento2.importexport.processor.export.product.delete_on_channel_action:
        parent: marello_magento2.importexport.processor.export_abstract
        calls:
            - [setTranslator, ['@marello_magento2.importexport.translator.product_delete_on_channel']]

    marello_magento2.importexport.processor.export.order.update_order_action:
        parent: marello_magento2.importexport.processor.export_abstract
        calls:
            - [setTranslator, ['@marello_magento2.importexport.translator.order.update_status']]

    marello_magento2.importexport.processor.find_internal_magento_product:
        class: Akeneo\Bundle\BatchBundle\Item\Support\NoopProcessor

    marello_magento2.importexport.processor.find_internal_magento_order:
        class: Akeneo\Bundle\BatchBundle\Item\Support\NoopProcessor

    marello_magento2.importexport.processor.export.product_delete_removed_action:
        class: Akeneo\Bundle\BatchBundle\Item\Support\NoopProcessor

    marello_magento2.importexport.processor.origin_ids_context:
        class: Akeneo\Bundle\BatchBundle\Item\Support\NoopProcessor

    # Sync Processors
    marello_magento2.integration.sync_processor.abstract:
        class: Marello\Bundle\Magento2Bundle\Integration\SyncProcessor\AbstractSyncProcessor
        parent: oro_integration.sync.processor
        abstract: true
        calls:
            - ['setConnectorSyncSettingsProvider', ['@marello_magento2.integration.connector_sync_settings']]
            - ['setOptionalListenerManager', ['@oro_platform.optional_listeners.manager']]

    marello_magento2.integration.sync_processor:
        class: Marello\Bundle\Magento2Bundle\Integration\SyncProcessor\SyncProcessor
        parent: marello_magento2.integration.sync_processor.abstract
        calls:
            - ['setInitialSyncProcessor', ['@marello_magento2.integration.sync_processor.initial_sync_processor']]
        tags:
            - { name: oro_integration.sync_processor, integration: magento2 }

    marello_magento2.integration.sync_processor.initial_sync_processor:
        class: Marello\Bundle\Magento2Bundle\Integration\SyncProcessor\InitialSyncProcessor
        parent: marello_magento2.integration.sync_processor.abstract
        calls:
            - ['setMessageProducer', ['@oro_message_queue.message_producer']]

    # Providers
    marello_magento2.integration.connector_sync_settings:
        class: Marello\Bundle\Magento2Bundle\Integration\Provider\ConnectorSyncSettingsProvider
        arguments:
            - '@marello_magento2.provider.tracked_sales_channel'
            - '@oro_config.manager'
            - '@oro_integration.repository.channel'
            - '@marello_magento2.repository.website_integration_status'

    # Translators
    marello_magento2.importexport.translator.simple_product.create:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Translator\SimpleProduct\CreateTranslator
        arguments:
            - '@marello_magento2.importexport.helper.simple_product_translator'
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.translator.simple_product.update:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Translator\SimpleProduct\UpdateTranslator
        arguments:
            - '@marello_magento2.importexport.helper.simple_product_translator'
            - '@marello_magento2.repository.product'
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.translator.product_delete_on_channel:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Translator\ProductDeleteOnChannelTranslator
        arguments:
            - '@marello_magento2.repository.product'
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.translator.simple_product.update_website_scope:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Translator\SimpleProduct\UpdateWebsiteScopeTranslator
        arguments:
            - '@marello_magento2.repository.website'
            - '@marello_magento2.repository.product'
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]

    marello_magento2.importexport.translator.order.update_status:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Translator\Order\UpdateStatusTranslator
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]

    # Serializers
    marello_magento2.importexport.normalizer.simple_product_create:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Serializer\SimpleProductCreateNormalizer
        tags:
            - { name: oro_importexport.normalizer, priority: 30 }

    marello_magento2.importexport.normalizer.simple_product_update:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Serializer\SimpleProductUpdateNormalizer
        tags:
            - { name: oro_importexport.normalizer, priority: 30 }

    marello_magento2.importexport.normalizer.simple_product_update_website_scope:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Serializer\SimpleProductUpdateWebsiteScopeNormalizer
        calls:
            - [setLogger, ['@oro_integration.logger.strategy']]
        tags:
            - { name: oro_importexport.normalizer, priority: 30 }

    marello_magento2.importexport.normalizer.product_delete_on_channel:
       class: Marello\Bundle\Magento2Bundle\ImportExport\Serializer\ProductDeleteOnChannelNormalizer
       tags:
             - { name: oro_importexport.normalizer, priority: 30 }

    marello_magento2.importexport.normalizer.order_status_update:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Serializer\OrderStatusUpdateNormalizer
        arguments:
            - '@marello_magento2.converter.order_status_id'
        tags:
            - { name: oro_importexport.normalizer, priority: 30 }

    # Helpers
    marello_magento2.importexport.helper.simple_product_translator:
        class: Marello\Bundle\Magento2Bundle\ImportExport\Helper\SimpleProductTranslatorHelper
        arguments:
            - '@oro_entity.doctrine_helper'
