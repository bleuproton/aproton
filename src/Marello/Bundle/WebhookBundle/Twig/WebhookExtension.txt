<?php

namespace Marello\Bundle\WebhookBundle\Twig;

use Doctrine\Persistence\ManagerRegistry;
use Marello\Bundle\WebhookBundle\Entity\Repository\WebhookRepository;
use Marello\Bundle\WebhookBundle\Entity\Webhook;
use Oro\Bundle\SecurityBundle\ORM\Walker\AclHelper;
use Twig\Extension\AbstractExtension;
use Twig\TwigFunction;

class WebhookExtension extends AbstractExtension
{
    const NAME = 'marello_webhook';

    /**
     * @var WebhookRepository
     */
    private $webhookRepository;

    public function __construct(
        private ManagerRegistry $registry,
        private AclHelper $aclHelper
    ) {
    }

    /**
     * @return array
     */
    public function getFunctions()
    {
        return [
            new TwigFunction(
                'marello_get_webhook_event_by_name',
                [$this, 'getWebhookNameByCode']
            ),
        ];
    }

    /**
     * @param string $code
     * @return string
     */
    public function getWebhookNameByCode($eventId)
    {
        var_dump($eventId);
        $channel = $this->getRepository()
            ->findOneBy(['id' => $eventId]);
        if ($channel) {
            return $channel->getName();
        }

        return $eventId;
    }

    /**
     * Returns the name of the extension.
     *
     * @return string The extension name
     */
    public function getName()
    {
        return self::NAME;
    }

    protected function getRepository(): WebhookRepository
    {
        if (!$this->webhookRepository) {
            $this->webhookRepository = $this->registry->getRepository(Webhook::class);
        }

        return $this->webhookRepository;
    }
}
